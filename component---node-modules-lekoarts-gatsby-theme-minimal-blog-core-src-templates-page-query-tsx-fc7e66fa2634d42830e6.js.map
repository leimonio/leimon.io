{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/page.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/page-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/page.tsx"],"names":["MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Page","page","data","title","description","excerpt","h2","sx","my","body","PageComponent","query"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qrECTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,oNCPaS,EAVF,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,KAAX,OACX,YAAC,IAAD,KACE,YAAC,IAAD,CAAKE,MAAOF,EAAKE,MAAOC,YAAaH,EAAKI,UAC1C,YAAC,IAAOC,GAAR,KAAYL,EAAKE,OACjB,uBAASI,GAAI,CAAEC,GAAI,IACjB,YAAC,cAAD,KAAcP,EAAKQ,S,urBCnBVC,UCOA,YAAqB,IAAlBR,EAAkB,EAAlBA,KACRD,EAASC,EAATD,KAER,OAAO,kBAAC,EAAD,CAAMC,KAAI,KAAOA,EAAP,CAAaD,YAHjB,IDLFU,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx-fc7e66fa2634d42830e6.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/** @jsx jsx */\r\nimport { jsx, Styled } from \"theme-ui\"\r\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\r\nimport Layout from \"./layout\"\r\nimport SEO from \"./seo\"\r\n\r\ntype PageProps = {\r\n  data: {\r\n    page: {\r\n      title: string\r\n      slug: string\r\n      excerpt: string\r\n      body: string\r\n    }\r\n  }\r\n}\r\n\r\nconst Page = ({ data: { page } }: PageProps) => (\r\n  <Layout>\r\n    <SEO title={page.title} description={page.excerpt} />\r\n    <Styled.h2>{page.title}</Styled.h2>\r\n    <section sx={{ my: 5 }}>\r\n      <MDXRenderer>{page.body}</MDXRenderer>\r\n    </section>\r\n  </Layout>\r\n)\r\n\r\nexport default Page\r\n","import { graphql } from \"gatsby\"\r\nimport PageComponent from \"../components/page\"\r\n\r\nexport default PageComponent\r\n\r\nexport const query = graphql`\r\n  query($slug: String!) {\r\n    page(slug: { eq: $slug }) {\r\n      title\r\n      slug\r\n      excerpt\r\n      body\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport Page from \"../../../components/page\"\r\n\r\ntype Props = {\r\n  data: {\r\n    page: any\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nexport default ({ data }: Props) => {\r\n  const { page } = data\r\n\r\n  return <Page data={{ ...data, page }} />\r\n}\r\n"],"sourceRoot":""}