{"version":3,"sources":["webpack:///path---responsive-debugging-de3bc3b76e9381ed23ca.js","webpack:///./.cache/json/responsive-debugging.json"],"names":["webpackJsonp","407","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","seoTitle","date","pathContext","slug","previous","next","fields","isArticle"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,YAAAC,OAAA,0BAAsDC,gBAAmBC,GAAA,kHAAAC,KAAA,83EAAAC,aAAuhFL,MAAA,uBAAAM,SAAA,KAAAC,KAAA,wBAA6EC,aAAgBC,KAAA,yBAAAC,SAAA,KAAAC,MAAwDC,QAAUH,KAAA,qBAA2BJ,aAAgBL,MAAA,4BAAAa,WAAA","file":"path---responsive-debugging-de3bc3b76e9381ed23ca.js","sourcesContent":["webpackJsonp([196886030795011],{\n\n/***/ 407:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"leimon.io\",\"author\":\"Konstantinos Leimonis\"}},\"markdownRemark\":{\"id\":\"/home/travis/build/leimonio/leimon.io/articles/responsive-debugging/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><img src=\\\"https://cdn-images-1.medium.com/fit/t/2000/840/0*iG83GUxfEJghfWxQ.jpeg\\\" alt=\\\"Responsive Debugging\\\"></p>\\n<h3>Web development on mobile never was that easy</h3>\\n<p>Google Chrome offers <strong>Developer Tools</strong>, having that way access into the internal of the browser.</p>\\n<p>Ever wanted having such tools that will help your <strong>development process on mobile</strong>? Chrome does it in a very efficient way.</p>\\n<p>Through its tool it allows you to inspect, debug, and analyze the on-device experience with the full suite of tools you’re used to, meaning you can use the Chrome DevTools on your development machine to debug a page on your mobile device.</p>\\n<p>How to debug your web content and applications on mobile?</p>\\n<p>What you will need are:</p>\\n<ol>\\n<li>\\n<p>An Android device with Chrome.</p>\\n</li>\\n<li>\\n<p>A USB cable to plug the device to your development machine.</p>\\n</li>\\n<li>\\n<p>The <a href=\\\"http://developer.android.com/sdk/index.html\\\">Android SDK</a> or <a href=\\\"https://chrome.google.com/webstore/detail/adb/dpngiggdglpdnjdoaefidgiigpemgage\\\">ADB Chrome plugin</a> installed on your development machine.</p>\\n</li>\\n</ol>\\n<p>For the installation process follow the next steps:</p>\\n<ol>\\n<li>\\n<p>Make sure you have installed the Android SDK or the ADB chrome plugin.</p>\\n</li>\\n<li>\\n<p>Enable usb debugging on your device. Settings > Developer Options > USB debugging.\\n(In the latter version of Android developers options are hidden by default. To enable them go to Settings > About Phone and tap Build number 7 times.)</p>\\n</li>\\n<li>\\n<p>Connect your device via USB to the development machine.\\nOn your mobile device, launch Chrome and enable the USB debugging settings, going to Settings > Advanced > DevTools > Enable USB Web debugging.</p>\\n</li>\\n<li>\\n<p>Now you can start debugging with your ADB Chrome extension. Start ADB and then View Inspect Targets list will contain your device’s open addresses.</p>\\n</li>\\n</ol>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/2000/0*rZtsQ26Zx0piuuid.png\\\"></p>\\n<p>You can now inspect and follow the development process as on your development machine. Inspect the address you want to debug and you are ready. A new window with the Chrome DevTools will appear, while your mobile browser’s document elements will be highlighted.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/2000/0*Rr9a_YzEM3DFJ2br.png\\\"></p>\",\"frontmatter\":{\"title\":\"Responsive Debugging\",\"seoTitle\":null,\"date\":\"September 07, 2013\"}}},\"pathContext\":{\"slug\":\"/responsive-debugging/\",\"previous\":null,\"next\":{\"fields\":{\"slug\":\"/why-flat-design/\"},\"frontmatter\":{\"title\":\"Why Flat Design? Why now?\",\"isArticle\":true}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---responsive-debugging-de3bc3b76e9381ed23ca.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"leimon.io\",\"author\":\"Konstantinos Leimonis\"}},\"markdownRemark\":{\"id\":\"/home/travis/build/leimonio/leimon.io/articles/responsive-debugging/index.md absPath of file >>> MarkdownRemark\",\"html\":\"<p><img src=\\\"https://cdn-images-1.medium.com/fit/t/2000/840/0*iG83GUxfEJghfWxQ.jpeg\\\" alt=\\\"Responsive Debugging\\\"></p>\\n<h3>Web development on mobile never was that easy</h3>\\n<p>Google Chrome offers <strong>Developer Tools</strong>, having that way access into the internal of the browser.</p>\\n<p>Ever wanted having such tools that will help your <strong>development process on mobile</strong>? Chrome does it in a very efficient way.</p>\\n<p>Through its tool it allows you to inspect, debug, and analyze the on-device experience with the full suite of tools you’re used to, meaning you can use the Chrome DevTools on your development machine to debug a page on your mobile device.</p>\\n<p>How to debug your web content and applications on mobile?</p>\\n<p>What you will need are:</p>\\n<ol>\\n<li>\\n<p>An Android device with Chrome.</p>\\n</li>\\n<li>\\n<p>A USB cable to plug the device to your development machine.</p>\\n</li>\\n<li>\\n<p>The <a href=\\\"http://developer.android.com/sdk/index.html\\\">Android SDK</a> or <a href=\\\"https://chrome.google.com/webstore/detail/adb/dpngiggdglpdnjdoaefidgiigpemgage\\\">ADB Chrome plugin</a> installed on your development machine.</p>\\n</li>\\n</ol>\\n<p>For the installation process follow the next steps:</p>\\n<ol>\\n<li>\\n<p>Make sure you have installed the Android SDK or the ADB chrome plugin.</p>\\n</li>\\n<li>\\n<p>Enable usb debugging on your device. Settings > Developer Options > USB debugging.\\n(In the latter version of Android developers options are hidden by default. To enable them go to Settings > About Phone and tap Build number 7 times.)</p>\\n</li>\\n<li>\\n<p>Connect your device via USB to the development machine.\\nOn your mobile device, launch Chrome and enable the USB debugging settings, going to Settings > Advanced > DevTools > Enable USB Web debugging.</p>\\n</li>\\n<li>\\n<p>Now you can start debugging with your ADB Chrome extension. Start ADB and then View Inspect Targets list will contain your device’s open addresses.</p>\\n</li>\\n</ol>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/2000/0*rZtsQ26Zx0piuuid.png\\\"></p>\\n<p>You can now inspect and follow the development process as on your development machine. Inspect the address you want to debug and you are ready. A new window with the Chrome DevTools will appear, while your mobile browser’s document elements will be highlighted.</p>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/2000/0*Rr9a_YzEM3DFJ2br.png\\\"></p>\",\"frontmatter\":{\"title\":\"Responsive Debugging\",\"seoTitle\":null,\"date\":\"September 07, 2013\"}}},\"pathContext\":{\"slug\":\"/responsive-debugging/\",\"previous\":null,\"next\":{\"fields\":{\"slug\":\"/why-flat-design/\"},\"frontmatter\":{\"title\":\"Why Flat Design? Why now?\",\"isArticle\":true}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/responsive-debugging.json\n// module id = 407\n// module chunks = 196886030795011"],"sourceRoot":""}